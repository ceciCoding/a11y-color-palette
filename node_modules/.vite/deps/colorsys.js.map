{
  "version": 3,
  "sources": ["../../colorsys/colorsys.js", "dep:colorsys"],
  "sourcesContent": ["\nconst RGB_MAX = 255\nconst HUE_MAX = 360\nconst SV_MAX = 100\n\nvar colorsys = module.exports = {}\n\ncolorsys.rgb2Hsl = function (r, g, b) {\n  if (typeof r === 'object') {\n    const args = r\n    r = args.r; g = args.g; b = args.b;\n  }\n  // It converts [0,255] format, to [0,1]\n  r = (r === RGB_MAX) ? 1 : (r % RGB_MAX / parseFloat(RGB_MAX))\n  g = (g === RGB_MAX) ? 1 : (g % RGB_MAX / parseFloat(RGB_MAX))\n  b = (b === RGB_MAX) ? 1 : (b % RGB_MAX / parseFloat(RGB_MAX))\n\n  var max = Math.max(r, g, b)\n  var min = Math.min(r, g, b)\n  var h, s, l = (max + min) / 2\n\n  if (max === min) {\n    h = s = 0 // achromatic\n  } else {\n    var d = max - min\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  return {\n    h: Math.round(h * HUE_MAX),\n    s: Math.round(s * SV_MAX),\n    l: Math.round(l * SV_MAX)\n  }\n}\n\ncolorsys.rgb_to_hsl = colorsys.rgbToHsl = colorsys.rgb2Hsl\n\ncolorsys.rgb2Hsv = function (r, g, b) {\n  if (typeof r === 'object') {\n    const args = r\n    r = args.r; g = args.g; b = args.b;\n  }\n\n  // It converts [0,255] format, to [0,1]\n  r = (r === RGB_MAX) ? 1 : (r % RGB_MAX / parseFloat(RGB_MAX))\n  g = (g === RGB_MAX) ? 1 : (g % RGB_MAX / parseFloat(RGB_MAX))\n  b = (b === RGB_MAX) ? 1 : (b % RGB_MAX / parseFloat(RGB_MAX))\n\n  var max = Math.max(r, g, b)\n  var min = Math.min(r, g, b)\n  var h, s, v = max\n\n  var d = max - min\n\n  s = max === 0 ? 0 : d / max\n\n  if (max === min) {\n    h = 0 // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  return {\n    h: Math.round(h * HUE_MAX),\n    s: Math.round(s * SV_MAX),\n    v: Math.round(v * SV_MAX)\n  }\n}\n\ncolorsys.rgb_to_hsv = colorsys.rgbToHsv = colorsys.rgb2Hsv\n\ncolorsys.hsl2Rgb = function (h, s, l) {\n  if (typeof h === 'object') {\n    const args = h\n    h = args.h; s = args.s; l = args.l;\n  }\n\n  var r, g, b\n\n  h = _normalizeAngle(h)\n  h = (h === HUE_MAX) ? 1 : (h % HUE_MAX / parseFloat(HUE_MAX))\n  s = (s === SV_MAX) ? 1 : (s % SV_MAX / parseFloat(SV_MAX))\n  l = (l === SV_MAX) ? 1 : (l % SV_MAX / parseFloat(SV_MAX))\n\n  if (s === 0) {\n    r = g = b = l // achromatic\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = _hue2Rgb(p, q, h + 1 / 3)\n    g = _hue2Rgb(p, q, h)\n    b = _hue2Rgb(p, q, h - 1 / 3)\n  }\n\n  return {\n    r: Math.round(r * RGB_MAX),\n    g: Math.round(g * RGB_MAX),\n    b: Math.round(b * RGB_MAX),\n  }\n}\n\ncolorsys.hsl_to_rgb = colorsys.hslToRgb = colorsys.hsl2Rgb\n\ncolorsys.hsv2Rgb = function (h, s, v) {\n  if (typeof h === 'object') {\n    const args = h\n    h = args.h; s = args.s; v = args.v;\n  }\n\n  h = _normalizeAngle(h)\n  h = (h === HUE_MAX) ? 1 : (h % HUE_MAX / parseFloat(HUE_MAX) * 6)\n  s = (s === SV_MAX) ? 1 : (s % SV_MAX / parseFloat(SV_MAX))\n  v = (v === SV_MAX) ? 1 : (v % SV_MAX / parseFloat(SV_MAX))\n\n  var i = Math.floor(h)\n  var f = h - i\n  var p = v * (1 - s)\n  var q = v * (1 - f * s)\n  var t = v * (1 - (1 - f) * s)\n  var mod = i % 6\n  var r = [v, q, p, p, t, v][mod]\n  var g = [t, v, v, q, p, p][mod]\n  var b = [p, p, t, v, v, q][mod]\n\n  return {\n    r: Math.floor(r * RGB_MAX),\n    g: Math.floor(g * RGB_MAX),\n    b: Math.floor(b * RGB_MAX),\n  }\n}\n\ncolorsys.hsv_to_rgb = colorsys.hsv2Rgb\ncolorsys.hsvToRgb = colorsys.hsv2Rgb\n\ncolorsys.rgb2Hex = function (r, g, b) {\n  if (typeof r === 'object') {\n    const args = r\n    r = args.r; g = args.g; b = args.b;\n  }\n  r = Math.round(r).toString(16)\n  g = Math.round(g).toString(16)\n  b = Math.round(b).toString(16)\n\n  r = r.length === 1 ? '0' + r : r\n  g = g.length === 1 ? '0' + g : g\n  b = b.length === 1 ? '0' + b : b\n\n  return '#' + r + g + b\n}\n\ncolorsys.rgb_to_hex = colorsys.rgbToHex = colorsys.rgb2Hex\n\ncolorsys.hex2Rgb = function (hex) {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null\n}\n\ncolorsys.hex_to_rgb = colorsys.hexToRgb = colorsys.hex2Rgb\n\ncolorsys.hsv2Hex = function (h, s, v) {\n  var rgb = colorsys.hsv2Rgb(h, s, v)\n  return colorsys.rgb2Hex(rgb.r, rgb.g, rgb.b)\n}\n\ncolorsys.hsv_to_hex = colorsys.hsv2Hex\ncolorsys.hsvToHex = colorsys.hsv2Hex\n\ncolorsys.hex2Hsv = function (hex) {\n  var rgb = colorsys.hex2Rgb(hex)\n  return colorsys.rgb2Hsv(rgb.r, rgb.g, rgb.b)\n}\n\ncolorsys.hex_to_hsv = colorsys.hexToHsv = colorsys.hex2Hsv\n\ncolorsys.hsl2Hex = function (h, s, l) {\n  var rgb = colorsys.hsl2Rgb(h, s, l)\n  return colorsys.rgb2Hex(rgb.r, rgb.g, rgb.b)\n}\n\ncolorsys.hsl_to_hex = colorsys.hslToHex = colorsys.hsl2Hex\n\ncolorsys.hex2Hsl = function (hex) {\n  var rgb = colorsys.hex2Rgb(hex)\n  return colorsys.rgb2Hsl(rgb.r, rgb.g, rgb.b)\n}\n\ncolorsys.hex_to_hsl = colorsys.hexToHsl = colorsys.hex2Hsl\n\ncolorsys.rgb2Cmyk = function (r, g, b) {\n  if (typeof r === 'object') {\n    const args = r\n    r = args.r; g = args.g; b = args.b;\n  }\n\n  var rprim = r / 255\n  var gprim = g / 255\n  var bprim = b / 255\n\n  var k = 1 - Math.max(rprim, gprim, bprim)\n\n  var c = (1 - rprim - k) / (1 - k)\n  var m = (1 - gprim - k) / (1 - k)\n  var y = (1 - bprim - k) / (1 - k)\n\n  return {\n    c: c.toFixed(3),\n    m: m.toFixed(3),\n    y: y.toFixed(3),\n    k: k.toFixed(3)\n  }\n}\n\ncolorsys.rgb_to_cmyk = colorsys.rgbToCmyk = colorsys.rgb2Cmyk\n\ncolorsys.cmyk2Rgb = function (c, m, y, k) {\n  if (typeof c === 'object') {\n    const args = c\n    c = args.c; m = args.m; y = args.y; k = args.k;\n  }\n\n  var r = 255 * (1 - c) * (1 - k)\n  var g = 255 * (1 - m) * (1 - k)\n  var b = 255 * (1 - y) * (1 - k)\n\n  return {\n    r: Math.floor(r),\n    g: Math.floor(g),\n    b: Math.floor(b)\n  }\n}\n\ncolorsys.cmyk_to_rgb = colorsys.cmykToRgb = colorsys.cmyk2Rgb\n\ncolorsys.hsv2Hsl = function (h, s, v) {\n  if (typeof h === 'object') {\n    const args = h\n    h = args.h; s = args.s; v = args.v;\n  }\n\n  var l = (2 - s) * v / 2\n\n  if (l !== 0) {\n    if (l === SV_MAX) {\n      s = 0\n    } else if (l < SV_MAX / 2) {\n      s = s * v / (l * 2)\n    } else {\n      s = s * v / (2 - l * 2)\n    }\n  }\n\n  return { h: h, s: s, l: l }\n}\n\ncolorsys.hsv_to_hsl = colorsys.hsvToHsl = colorsys.hsv2Hsl\n\ncolorsys.hsl2Hsv = function (h, s, l) {\n  if (typeof h === 'object') {\n    const args = h\n    h = args.h; s = args.s; l = args.l;\n  }\n\n  s = s * (l < 50 ? l : (100 - l))\n\n  return {\n    h: h,\n    s: Math.floor(2 * s / (l + s)),\n    v: Math.floor(l + s),\n  }\n}\n\ncolorsys.hsl_to_hsv = colorsys.hslToHsv = colorsys.hsl2Hsv\n\n/**\n* Parses values from a string into a javascript object\n* e.g: hsla(140, 30%, 40%, .5) => { h: 140, s: 30, l: 40, alpha: 0.5}\n*/\ncolorsys.parseCss = function (cssString) {\n  if (cssString.indexOf('#') > -1) {\n    return colorsys.hex2Rgb(cssString)\n  }\n\n  const prefix = cssString.split('(')[0]\n  const args = cssString.split('(')[1].split(')')[0].split(',')\n\n  // Use the prefix as an array [r, g, b, a] to parse the colours\n  return prefix.split('').reduce(function (color, param, idx) {\n    const nextColor = color\n    nextColor[param] = parseFloat(args[idx])\n    return nextColor\n  }, {})\n}\n\ncolorsys.parse_css = colorsys.parseCss\n\ncolorsys.stringify = function (obj) {\n  const prefix = Object.keys(obj).join('')\n  const values = Object.keys(obj).map(function (key) {\n    var val = obj[key]\n    if (key === 's' || key === 'v' || key === 'l') {\n      val = val + '%'\n    }\n    return val\n  })\n  return prefix + '(' + values.join(', ') + ')'\n}\n\n// Google Assistant API uses this format in SmartHome Apps. Example => \"spectrumRGB\": 16711680\ncolorsys.hex_to_decimal = colorsys.hexToDecimal = colorsys.hex2Decimal\n\ncolorsys.hex2Decimal = function(hexColor) {\n  if (typeof hexColor === \"string\") {\n    return parseInt(hexColor.replace(\"#\", \"\"), 16)\n  }\n}\ncolorsys.decimal_to_hex = colorsys.decimalToHex = colorsys.decimal2Hex\n\ncolorsys.decimal2Hex = function(decimalColor) {\n  if (typeof decimalColor === \"string\") {\n    return \"#\" + parseInt(decimalColor).toString(16)\n  }\n  return \"#\" + decimalColor.toString(16)\n}\n\n// Will return a random hex colour\ncolorsys.random = function () {\n  const base = '000000'\n  const number = Math.floor(Math.random() * 16777215).toString(16)\n  return '#' + (base + number).substr(-6)\n}\n\ncolorsys.rotateHue = function (hue, amount) {\n  if (amount === void 0) { amount = 0; }\n  const aux = typeof hue === 'object'\n      ? (hue.h + amount) % 360\n      : (hue + amount) % 360\n      \n  const nextHue = aux < 0 ? (360 + aux) : aux\n  return typeof hue === 'object'\n      ? Object.assign(hue, { h: nextHue })\n      : nextHue\n}\n\n\ncolorsys.getColorEncoding = function (color) {\n  if (typeof color === 'string') {\n    try {\n      colorsys.hex2Rgb(color)\n      return 'hex'\n    } catch (err) { /* Silent catch */ }\n  }\n\n  if (typeof color !== 'object') {\n    return 'unknown'\n  }\n\n  // Now check that the sum of the components is still a number\n  // And different than NaN (for that the boolean check)\n  const c = color\n\n  if ((c.r + c.g + c.b) && typeof (c.r + c.g + c.b) === 'number') {\n    return 'rgb'\n  }\n\n  if ((c.h + c.s + c.v) && typeof (c.h + c.s + c.v) === 'number') {\n    return 'hsv'\n  }\n\n  if ((c.h + c.s + c.l) && typeof (c.h + c.s + c.l) === 'number') {\n    return 'hsl'\n  }\n\n  if ((c.c + c.m + c.y + c.k) && typeof (c.c + c.m + c.y + c.k) === 'number') {\n    return 'cmyk'\n  }\n\n  return 'unknown'\n}\n\nfunction _normalizeAngle (degrees) {\n  return (degrees % 360 + 360) % 360;\n}\n\nfunction _hue2Rgb (p, q, t) {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n  return p\n}\n\n// It's easier to change luminosity in HSL\ncolorsys.any2Hsl = function (color) {\n  const colorEncoding = colorsys.getColorEncoding(color)\n\n  switch (colorEncoding) {\n    case 'hsl':\n      return color\n    case 'rgb':\n      return colorsys.rgb2Hsl(color)\n    case 'hex':\n      return colorsys.hex2Hsl(color)\n    case 'hsv':\n      return colorsys.hsv2Hsl(color)\n    case 'cmyk':\n      return colorsys.rgb2Hsl(colorsys.cmyk2Rgb(color))\n    default:\n      return 'unknown'\n  }\n}\n\n// Aliases\ncolorsys.any_to_hsl = colorsys.anyToHsl = colorsys.any2Hsl\n\n// Will return the transforming to encode function\n// or undefined\ncolorsys.getTransformEncodingFunction = function (color, desiredEncoding) {\n  const originalEncoding = colorsys.getColorEncoding(color)\n  return colorsys[originalEncoding + '_to_' + desiredEncoding]\n}\n\n// TODO:\n// Create darken / lighten methods with same input/output format\ncolorsys.darken = function (color, percentage) {\n  const encoding = colorsys.getColorEncoding(color)\n\n  if (encoding === 'unknown') {\n    return color\n  }\n\n  // Missing transformation function between hsl and cmyk\n  // Also, this algo is simple and precise\n  if (encoding === 'cmyk') {\n    const nextCmyk = color\n    nextCmyk.k = Math.min(100, 100 * percentage + nextCmyk.k)\n    return nextCmyk\n  }\n\n  const hsl = colorsys.any2Hsl(color)\n  const nextHsl = {h: hsl.h, s: hsl.s, l: Math.round(hsl.l * (1 - percentage))}\n\n  const transformFn = encoding === 'hsl'\n    ? c => c // If HSL return as incame\n    : colorsys.getTransformEncodingFunction(nextHsl, encoding)\n\n  if (typeof transformFn !== 'function') {\n    return color\n  }\n\n  return transformFn(nextHsl)\n}\n", "export default require(\"./node_modules/colorsys/colorsys.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AACA,QAAM,UAAU;AAChB,QAAM,UAAU;AAChB,QAAM,SAAS;AAEf,QAAI,WAAW,OAAO,UAAU,CAAC;AAEjC,aAAS,UAAU,SAAU,GAAG,GAAG,GAAG;AACpC,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,OAAO;AACb,YAAI,KAAK;AAAG,YAAI,KAAK;AAAG,YAAI,KAAK;AAAA,MACnC;AAEA,UAAK,MAAM,UAAW,IAAK,IAAI,UAAU,WAAW,OAAO;AAC3D,UAAK,MAAM,UAAW,IAAK,IAAI,UAAU,WAAW,OAAO;AAC3D,UAAK,MAAM,UAAW,IAAK,IAAI,UAAU,WAAW,OAAO;AAE3D,UAAI,MAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC1B,UAAI,MAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC1B,UAAI,GAAG,GAAG,IAAK,OAAM,OAAO;AAE5B,UAAI,QAAQ,KAAK;AACf,YAAI,IAAI;AAAA,MACV,OAAO;AACL,YAAI,IAAI,MAAM;AACd,YAAI,IAAI,MAAM,IAAK,KAAI,MAAM,OAAO,IAAK,OAAM;AAC/C,gBAAQ;AAAA,eACD;AACH,gBAAK,KAAI,KAAK,IAAK,KAAI,IAAI,IAAI;AAC/B;AAAA,eACG;AACH,gBAAK,KAAI,KAAK,IAAI;AAClB;AAAA,eACG;AACH,gBAAK,KAAI,KAAK,IAAI;AAClB;AAAA;AAEJ,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,QACL,GAAG,KAAK,MAAM,IAAI,OAAO;AAAA,QACzB,GAAG,KAAK,MAAM,IAAI,MAAM;AAAA,QACxB,GAAG,KAAK,MAAM,IAAI,MAAM;AAAA,MAC1B;AAAA,IACF;AAEA,aAAS,aAAa,SAAS,WAAW,SAAS;AAEnD,aAAS,UAAU,SAAU,GAAG,GAAG,GAAG;AACpC,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,OAAO;AACb,YAAI,KAAK;AAAG,YAAI,KAAK;AAAG,YAAI,KAAK;AAAA,MACnC;AAGA,UAAK,MAAM,UAAW,IAAK,IAAI,UAAU,WAAW,OAAO;AAC3D,UAAK,MAAM,UAAW,IAAK,IAAI,UAAU,WAAW,OAAO;AAC3D,UAAK,MAAM,UAAW,IAAK,IAAI,UAAU,WAAW,OAAO;AAE3D,UAAI,MAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC1B,UAAI,MAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC1B,UAAI,GAAG,GAAG,IAAI;AAEd,UAAI,IAAI,MAAM;AAEd,UAAI,QAAQ,IAAI,IAAI,IAAI;AAExB,UAAI,QAAQ,KAAK;AACf,YAAI;AAAA,MACN,OAAO;AACL,gBAAQ;AAAA,eACD;AACH,gBAAK,KAAI,KAAK,IAAK,KAAI,IAAI,IAAI;AAC/B;AAAA,eACG;AACH,gBAAK,KAAI,KAAK,IAAI;AAClB;AAAA,eACG;AACH,gBAAK,KAAI,KAAK,IAAI;AAClB;AAAA;AAEJ,aAAK;AAAA,MACP;AAEA,aAAO;AAAA,QACL,GAAG,KAAK,MAAM,IAAI,OAAO;AAAA,QACzB,GAAG,KAAK,MAAM,IAAI,MAAM;AAAA,QACxB,GAAG,KAAK,MAAM,IAAI,MAAM;AAAA,MAC1B;AAAA,IACF;AAEA,aAAS,aAAa,SAAS,WAAW,SAAS;AAEnD,aAAS,UAAU,SAAU,GAAG,GAAG,GAAG;AACpC,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,OAAO;AACb,YAAI,KAAK;AAAG,YAAI,KAAK;AAAG,YAAI,KAAK;AAAA,MACnC;AAEA,UAAI,GAAG,GAAG;AAEV,UAAI,gBAAgB,CAAC;AACrB,UAAK,MAAM,UAAW,IAAK,IAAI,UAAU,WAAW,OAAO;AAC3D,UAAK,MAAM,SAAU,IAAK,IAAI,SAAS,WAAW,MAAM;AACxD,UAAK,MAAM,SAAU,IAAK,IAAI,SAAS,WAAW,MAAM;AAExD,UAAI,MAAM,GAAG;AACX,YAAI,IAAI,IAAI;AAAA,MACd,OAAO;AACL,YAAI,IAAI,IAAI,MAAM,IAAK,KAAI,KAAK,IAAI,IAAI,IAAI;AAC5C,YAAI,IAAI,IAAI,IAAI;AAChB,YAAI,SAAS,GAAG,GAAG,IAAI,IAAI,CAAC;AAC5B,YAAI,SAAS,GAAG,GAAG,CAAC;AACpB,YAAI,SAAS,GAAG,GAAG,IAAI,IAAI,CAAC;AAAA,MAC9B;AAEA,aAAO;AAAA,QACL,GAAG,KAAK,MAAM,IAAI,OAAO;AAAA,QACzB,GAAG,KAAK,MAAM,IAAI,OAAO;AAAA,QACzB,GAAG,KAAK,MAAM,IAAI,OAAO;AAAA,MAC3B;AAAA,IACF;AAEA,aAAS,aAAa,SAAS,WAAW,SAAS;AAEnD,aAAS,UAAU,SAAU,GAAG,GAAG,GAAG;AACpC,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,OAAO;AACb,YAAI,KAAK;AAAG,YAAI,KAAK;AAAG,YAAI,KAAK;AAAA,MACnC;AAEA,UAAI,gBAAgB,CAAC;AACrB,UAAK,MAAM,UAAW,IAAK,IAAI,UAAU,WAAW,OAAO,IAAI;AAC/D,UAAK,MAAM,SAAU,IAAK,IAAI,SAAS,WAAW,MAAM;AACxD,UAAK,MAAM,SAAU,IAAK,IAAI,SAAS,WAAW,MAAM;AAExD,UAAI,IAAI,KAAK,MAAM,CAAC;AACpB,UAAI,IAAI,IAAI;AACZ,UAAI,IAAI,IAAK,KAAI;AACjB,UAAI,IAAI,IAAK,KAAI,IAAI;AACrB,UAAI,IAAI,IAAK,KAAK,KAAI,KAAK;AAC3B,UAAI,MAAM,IAAI;AACd,UAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE;AAC3B,UAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE;AAC3B,UAAI,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE;AAE3B,aAAO;AAAA,QACL,GAAG,KAAK,MAAM,IAAI,OAAO;AAAA,QACzB,GAAG,KAAK,MAAM,IAAI,OAAO;AAAA,QACzB,GAAG,KAAK,MAAM,IAAI,OAAO;AAAA,MAC3B;AAAA,IACF;AAEA,aAAS,aAAa,SAAS;AAC/B,aAAS,WAAW,SAAS;AAE7B,aAAS,UAAU,SAAU,GAAG,GAAG,GAAG;AACpC,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,OAAO;AACb,YAAI,KAAK;AAAG,YAAI,KAAK;AAAG,YAAI,KAAK;AAAA,MACnC;AACA,UAAI,KAAK,MAAM,CAAC,EAAE,SAAS,EAAE;AAC7B,UAAI,KAAK,MAAM,CAAC,EAAE,SAAS,EAAE;AAC7B,UAAI,KAAK,MAAM,CAAC,EAAE,SAAS,EAAE;AAE7B,UAAI,EAAE,WAAW,IAAI,MAAM,IAAI;AAC/B,UAAI,EAAE,WAAW,IAAI,MAAM,IAAI;AAC/B,UAAI,EAAE,WAAW,IAAI,MAAM,IAAI;AAE/B,aAAO,MAAM,IAAI,IAAI;AAAA,IACvB;AAEA,aAAS,aAAa,SAAS,WAAW,SAAS;AAEnD,aAAS,UAAU,SAAU,KAAK;AAChC,UAAI,SAAS,4CAA4C,KAAK,GAAG;AACjE,aAAO,SAAS;AAAA,QACd,GAAG,SAAS,OAAO,IAAI,EAAE;AAAA,QACzB,GAAG,SAAS,OAAO,IAAI,EAAE;AAAA,QACzB,GAAG,SAAS,OAAO,IAAI,EAAE;AAAA,MAC3B,IAAI;AAAA,IACN;AAEA,aAAS,aAAa,SAAS,WAAW,SAAS;AAEnD,aAAS,UAAU,SAAU,GAAG,GAAG,GAAG;AACpC,UAAI,MAAM,SAAS,QAAQ,GAAG,GAAG,CAAC;AAClC,aAAO,SAAS,QAAQ,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAAA,IAC7C;AAEA,aAAS,aAAa,SAAS;AAC/B,aAAS,WAAW,SAAS;AAE7B,aAAS,UAAU,SAAU,KAAK;AAChC,UAAI,MAAM,SAAS,QAAQ,GAAG;AAC9B,aAAO,SAAS,QAAQ,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAAA,IAC7C;AAEA,aAAS,aAAa,SAAS,WAAW,SAAS;AAEnD,aAAS,UAAU,SAAU,GAAG,GAAG,GAAG;AACpC,UAAI,MAAM,SAAS,QAAQ,GAAG,GAAG,CAAC;AAClC,aAAO,SAAS,QAAQ,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAAA,IAC7C;AAEA,aAAS,aAAa,SAAS,WAAW,SAAS;AAEnD,aAAS,UAAU,SAAU,KAAK;AAChC,UAAI,MAAM,SAAS,QAAQ,GAAG;AAC9B,aAAO,SAAS,QAAQ,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAAA,IAC7C;AAEA,aAAS,aAAa,SAAS,WAAW,SAAS;AAEnD,aAAS,WAAW,SAAU,GAAG,GAAG,GAAG;AACrC,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,OAAO;AACb,YAAI,KAAK;AAAG,YAAI,KAAK;AAAG,YAAI,KAAK;AAAA,MACnC;AAEA,UAAI,QAAQ,IAAI;AAChB,UAAI,QAAQ,IAAI;AAChB,UAAI,QAAQ,IAAI;AAEhB,UAAI,IAAI,IAAI,KAAK,IAAI,OAAO,OAAO,KAAK;AAExC,UAAI,IAAK,KAAI,QAAQ,KAAM,KAAI;AAC/B,UAAI,IAAK,KAAI,QAAQ,KAAM,KAAI;AAC/B,UAAI,IAAK,KAAI,QAAQ,KAAM,KAAI;AAE/B,aAAO;AAAA,QACL,GAAG,EAAE,QAAQ,CAAC;AAAA,QACd,GAAG,EAAE,QAAQ,CAAC;AAAA,QACd,GAAG,EAAE,QAAQ,CAAC;AAAA,QACd,GAAG,EAAE,QAAQ,CAAC;AAAA,MAChB;AAAA,IACF;AAEA,aAAS,cAAc,SAAS,YAAY,SAAS;AAErD,aAAS,WAAW,SAAU,GAAG,GAAG,GAAG,GAAG;AACxC,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,OAAO;AACb,YAAI,KAAK;AAAG,YAAI,KAAK;AAAG,YAAI,KAAK;AAAG,YAAI,KAAK;AAAA,MAC/C;AAEA,UAAI,IAAI,MAAO,KAAI,KAAM,KAAI;AAC7B,UAAI,IAAI,MAAO,KAAI,KAAM,KAAI;AAC7B,UAAI,IAAI,MAAO,KAAI,KAAM,KAAI;AAE7B,aAAO;AAAA,QACL,GAAG,KAAK,MAAM,CAAC;AAAA,QACf,GAAG,KAAK,MAAM,CAAC;AAAA,QACf,GAAG,KAAK,MAAM,CAAC;AAAA,MACjB;AAAA,IACF;AAEA,aAAS,cAAc,SAAS,YAAY,SAAS;AAErD,aAAS,UAAU,SAAU,GAAG,GAAG,GAAG;AACpC,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,OAAO;AACb,YAAI,KAAK;AAAG,YAAI,KAAK;AAAG,YAAI,KAAK;AAAA,MACnC;AAEA,UAAI,IAAK,KAAI,KAAK,IAAI;AAEtB,UAAI,MAAM,GAAG;AACX,YAAI,MAAM,QAAQ;AAChB,cAAI;AAAA,QACN,WAAW,IAAI,SAAS,GAAG;AACzB,cAAI,IAAI,IAAK,KAAI;AAAA,QACnB,OAAO;AACL,cAAI,IAAI,IAAK,KAAI,IAAI;AAAA,QACvB;AAAA,MACF;AAEA,aAAO,EAAE,GAAM,GAAM,EAAK;AAAA,IAC5B;AAEA,aAAS,aAAa,SAAS,WAAW,SAAS;AAEnD,aAAS,UAAU,SAAU,GAAG,GAAG,GAAG;AACpC,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,OAAO;AACb,YAAI,KAAK;AAAG,YAAI,KAAK;AAAG,YAAI,KAAK;AAAA,MACnC;AAEA,UAAI,IAAK,KAAI,KAAK,IAAK,MAAM;AAE7B,aAAO;AAAA,QACL;AAAA,QACA,GAAG,KAAK,MAAM,IAAI,IAAK,KAAI,EAAE;AAAA,QAC7B,GAAG,KAAK,MAAM,IAAI,CAAC;AAAA,MACrB;AAAA,IACF;AAEA,aAAS,aAAa,SAAS,WAAW,SAAS;AAMnD,aAAS,WAAW,SAAU,WAAW;AACvC,UAAI,UAAU,QAAQ,GAAG,IAAI,IAAI;AAC/B,eAAO,SAAS,QAAQ,SAAS;AAAA,MACnC;AAEA,YAAM,SAAS,UAAU,MAAM,GAAG,EAAE;AACpC,YAAM,OAAO,UAAU,MAAM,GAAG,EAAE,GAAG,MAAM,GAAG,EAAE,GAAG,MAAM,GAAG;AAG5D,aAAO,OAAO,MAAM,EAAE,EAAE,OAAO,SAAU,OAAO,OAAO,KAAK;AAC1D,cAAM,YAAY;AAClB,kBAAU,SAAS,WAAW,KAAK,IAAI;AACvC,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AAAA,IACP;AAEA,aAAS,YAAY,SAAS;AAE9B,aAAS,YAAY,SAAU,KAAK;AAClC,YAAM,SAAS,OAAO,KAAK,GAAG,EAAE,KAAK,EAAE;AACvC,YAAM,SAAS,OAAO,KAAK,GAAG,EAAE,IAAI,SAAU,KAAK;AACjD,YAAI,MAAM,IAAI;AACd,YAAI,QAAQ,OAAO,QAAQ,OAAO,QAAQ,KAAK;AAC7C,gBAAM,MAAM;AAAA,QACd;AACA,eAAO;AAAA,MACT,CAAC;AACD,aAAO,SAAS,MAAM,OAAO,KAAK,IAAI,IAAI;AAAA,IAC5C;AAGA,aAAS,iBAAiB,SAAS,eAAe,SAAS;AAE3D,aAAS,cAAc,SAAS,UAAU;AACxC,UAAI,OAAO,aAAa,UAAU;AAChC,eAAO,SAAS,SAAS,QAAQ,KAAK,EAAE,GAAG,EAAE;AAAA,MAC/C;AAAA,IACF;AACA,aAAS,iBAAiB,SAAS,eAAe,SAAS;AAE3D,aAAS,cAAc,SAAS,cAAc;AAC5C,UAAI,OAAO,iBAAiB,UAAU;AACpC,eAAO,MAAM,SAAS,YAAY,EAAE,SAAS,EAAE;AAAA,MACjD;AACA,aAAO,MAAM,aAAa,SAAS,EAAE;AAAA,IACvC;AAGA,aAAS,SAAS,WAAY;AAC5B,YAAM,OAAO;AACb,YAAM,SAAS,KAAK,MAAM,KAAK,OAAO,IAAI,QAAQ,EAAE,SAAS,EAAE;AAC/D,aAAO,MAAO,QAAO,QAAQ,OAAO,EAAE;AAAA,IACxC;AAEA,aAAS,YAAY,SAAU,KAAK,QAAQ;AAC1C,UAAI,WAAW,QAAQ;AAAE,iBAAS;AAAA,MAAG;AACrC,YAAM,MAAM,OAAO,QAAQ,WACpB,KAAI,IAAI,UAAU,MAClB,OAAM,UAAU;AAEvB,YAAM,UAAU,MAAM,IAAK,MAAM,MAAO;AACxC,aAAO,OAAO,QAAQ,WAChB,OAAO,OAAO,KAAK,EAAE,GAAG,QAAQ,CAAC,IACjC;AAAA,IACR;AAGA,aAAS,mBAAmB,SAAU,OAAO;AAC3C,UAAI,OAAO,UAAU,UAAU;AAC7B,YAAI;AACF,mBAAS,QAAQ,KAAK;AACtB,iBAAO;AAAA,QACT,SAAS,KAAP;AAAA,QAAiC;AAAA,MACrC;AAEA,UAAI,OAAO,UAAU,UAAU;AAC7B,eAAO;AAAA,MACT;AAIA,YAAM,IAAI;AAEV,UAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAM,OAAQ,GAAE,IAAI,EAAE,IAAI,EAAE,OAAO,UAAU;AAC9D,eAAO;AAAA,MACT;AAEA,UAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAM,OAAQ,GAAE,IAAI,EAAE,IAAI,EAAE,OAAO,UAAU;AAC9D,eAAO;AAAA,MACT;AAEA,UAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAM,OAAQ,GAAE,IAAI,EAAE,IAAI,EAAE,OAAO,UAAU;AAC9D,eAAO;AAAA,MACT;AAEA,UAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAM,OAAQ,GAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,UAAU;AAC1E,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAEA,6BAA0B,SAAS;AACjC,aAAQ,WAAU,MAAM,OAAO;AAAA,IACjC;AAEA,sBAAmB,GAAG,GAAG,GAAG;AAC1B,UAAI,IAAI;AAAG,aAAK;AAChB,UAAI,IAAI;AAAG,aAAK;AAChB,UAAI,IAAI,IAAI;AAAG,eAAO,IAAK,KAAI,KAAK,IAAI;AACxC,UAAI,IAAI,IAAI;AAAG,eAAO;AACtB,UAAI,IAAI,IAAI;AAAG,eAAO,IAAK,KAAI,KAAM,KAAI,IAAI,KAAK;AAClD,aAAO;AAAA,IACT;AAGA,aAAS,UAAU,SAAU,OAAO;AAClC,YAAM,gBAAgB,SAAS,iBAAiB,KAAK;AAErD,cAAQ;AAAA,aACD;AACH,iBAAO;AAAA,aACJ;AACH,iBAAO,SAAS,QAAQ,KAAK;AAAA,aAC1B;AACH,iBAAO,SAAS,QAAQ,KAAK;AAAA,aAC1B;AACH,iBAAO,SAAS,QAAQ,KAAK;AAAA,aAC1B;AACH,iBAAO,SAAS,QAAQ,SAAS,SAAS,KAAK,CAAC;AAAA;AAEhD,iBAAO;AAAA;AAAA,IAEb;AAGA,aAAS,aAAa,SAAS,WAAW,SAAS;AAInD,aAAS,+BAA+B,SAAU,OAAO,iBAAiB;AACxE,YAAM,mBAAmB,SAAS,iBAAiB,KAAK;AACxD,aAAO,SAAS,mBAAmB,SAAS;AAAA,IAC9C;AAIA,aAAS,SAAS,SAAU,OAAO,YAAY;AAC7C,YAAM,WAAW,SAAS,iBAAiB,KAAK;AAEhD,UAAI,aAAa,WAAW;AAC1B,eAAO;AAAA,MACT;AAIA,UAAI,aAAa,QAAQ;AACvB,cAAM,WAAW;AACjB,iBAAS,IAAI,KAAK,IAAI,KAAK,MAAM,aAAa,SAAS,CAAC;AACxD,eAAO;AAAA,MACT;AAEA,YAAM,MAAM,SAAS,QAAQ,KAAK;AAClC,YAAM,UAAU,EAAC,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,IAAI,IAAK,KAAI,WAAW,EAAC;AAE5E,YAAM,cAAc,aAAa,QAC7B,OAAK,IACL,SAAS,6BAA6B,SAAS,QAAQ;AAE3D,UAAI,OAAO,gBAAgB,YAAY;AACrC,eAAO;AAAA,MACT;AAEA,aAAO,YAAY,OAAO;AAAA,IAC5B;AAAA;AAAA;;;AC9dA,IAAO,mBAAQ;",
  "names": []
}
